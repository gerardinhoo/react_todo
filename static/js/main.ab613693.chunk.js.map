{"version":3,"sources":["components/TodoItem.js","components/Todo.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","background","padding","borderBottom","textDecoration","_this","props","todo","completed","_this$props$todo","this","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todo","todos","map","components_TodoItem","key","headerStyle","textAlign","linkStyle","Header","Link","to","AddTodo","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","value","inherits","createClass","display","flex","placeholder","className","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","BrowserRouter","layout_Header","Route","exact","path","render","components_AddTodo","components_Todo","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab613693.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Proptypes from 'prop-types'\n\n\nclass TodoItem extends Component {\ngetStyle = () => {\n    return {\n      background: \"#f4f4f4\",\n      padding: \"10px\",\n      borderBottom: \"1px #ccc dotted\",\n      textDecoration: this.props.todo.completed? \n      \"line-through\" : \"none\",\n    }\n  }\n  \n\n  render() {\n    const { id, title} = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input \n            type=\"checkbox\" \n            onChange={this.props.markComplete.bind(this, id)} \n          /> {''}\n          { title }\n          <button onClick={this.props.delTodo.bind(this, id)}style={btnStyle}>x</button>\n        </p>\n      </div>\n    )\n  }\n}\n\n//Proptypes\nTodoItem.propTypes = {\n  todo: Proptypes.object.isRequired,\n  markComplete: Proptypes.func.isRequired,\n  delTodo: Proptypes.func.isRequired\n}\n\n\nconst btnStyle = {\n  background: \"#ff0000\",\n  color: \"#fff\",\n  border: \"none\",\n  padding: \"5px 9px\",\n  borderRadius: \"50%\",\n  cursor: \"pointer\",\n  float: \"right\"\n\n\n}\n\n\nexport default TodoItem;\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport Proptypes from 'prop-types';\n\n\nclass Todo extends Component {\n\n  render() {\n    return this.props.todos.map((todo) => (\n      <TodoItem \n        key={todo.id} \n        todo={todo} \n        markComplete={this.props.markComplete} \n        delTodo={this.props.delTodo}\n      />\n    ))\n  }\n}\n\n//Proptypes\nTodo.propTypes = {\n  todos: Proptypes.array.isRequired,\n  markComplete: Proptypes.func.isRequired,\n  delTodo: Proptypes.func.isRequired\n}\n\nexport default Todo\n\n\n\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\n const Header = () => {\n  return (\n    <header style={headerStyle}>\n      <h2>Todo List</h2>\n      <Link style={linkStyle} to=\"/\">Home</Link> |\n      <Link style={linkStyle} to=\"/about\">About</Link>\n    </header>\n  )\n}\n\nconst headerStyle = {\n  background: \"#333\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  padding: \"10px\"\n  \n}\n\n\nconst linkStyle = {\n  color: \"#fff\"\n}\n\n\n\nexport default Header\n","import React, { Component } from 'react';\nimport Proptypes from 'prop-types'\n\nexport class AddTodo extends Component {\n  state = {\n    title: \"\"\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: \"\" });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value })\n\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\n        <input \n          type=\"text\"\n          name=\"title\"\n          style={{ flex: \"10\", padding: \"5px\"}}\n          placeholder=\"Add todo...\"\n          value={this.state.title}\n          onChange={this.onChange}\n\n        />\n        <input \n          type=\"submit\"\n          value=\"Submit\"\n          className=\"btn\"\n          style={{ flex: \"1\" }}\n        />\n      </form>\n    )\n  }\n}\n\n//Proptypes\nAddTodo.propTypes = {\n  addTodo: Proptypes.func.isRequired\n}\nexport default AddTodo\n","import React from 'react'\n\nconst About = () => {\n  return (\n   <React.Fragment>\n     <h1>About</h1>\n      <b>\n        <p>This is a Todo List App built with React</p>\n      </b>\n   </React.Fragment>\n  )\n}\n\n\nexport default About;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Todo from './components/Todo';\nimport Header from \"./components/layout/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\n// import uuid from 'uuid';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=15\")\n      .then(res => this.setState({todos: res.data}));\n   \n  }\n\n  // toggle complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  // Delete Todo\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n )\n};\n\n   \n  // Add Todo\n  addTodo = title => {\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        title, \n        completed: false\n      })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todo\n                  todos={this.state.todos}\n                  markComplete={this.markComplete}\n                  delTodo={this.delTodo}\n                />\n              </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}